-- This script is generated by a tool. Changes may be lost when this script is regenerated.
--*********************************************************************
-- TITLE:         SXu_EmployeeRoleDimXConfiguration
-- PURPOSE:       To insert configuration data for SXu_EmployeeRoleDimX and the following custom packages:
--                ErsatzHR_EmployeeRole_Load,
--                ErsatzHR_EmployeeRole_Parse
-- DATABASE:      Staging
--*********************************************************************

-- Make sure that Source and Target versions are compatible
DECLARE @iTargetVersion tinyint,
        @iTargetMinorVersion int,
        @iSourceVersion tinyint,
        @iSourceMinorVersion int,
        @VersionCompatible bit,
        @sVersionErrorMessage nvarchar(500)
SET @iSourceVersion = 28
SET @iSourceMinorVersion = 27
SET @iTargetVersion = CAST( Epic.GetConfigurationValue( N'WarehouseVersion' ) AS tinyint )
SET @iTargetMinorVersion = CAST( Epic.GetConfigurationValue( N'WarehouseMinorVersion' ) AS int )
SET @VersionCompatible = CASE WHEN @iTargetVersion = @iSourceVersion
                                OR ( @iTargetVersion > @iSourceVersion AND @iTargetVersion <= @iSourceVersion + 4 )
                                  THEN 1 ELSE 0 END
IF @VersionCompatible = 0
BEGIN
  SET @sVersionErrorMessage = N'The target version must be within four versions of the source version for this script to be installed. 
The source version is ' + CAST( Epic.GetWarehouseVersionName( @iSourceVersion, @iSourceMinorVersion ) AS nvarchar(50) ) 
+ N', so this script can only be installed on versions ' + CAST( Epic.GetWarehouseVersionName( @iSourceVersion, 0 ) AS nvarchar(50) ) 
+ N'+, ' + CAST( Epic.GetWarehouseVersionName( @iSourceVersion + 1, 0 ) AS nvarchar(50)) + N'+, ' + CAST( Epic.GetWarehouseVersionName( @iSourceVersion + 2, 0 ) AS nvarchar(50) ) 
+ N'+, ' + CAST( Epic.GetWarehouseVersionName(@iSourceVersion + 3, 0) AS nvarchar(50)) + N'+, and ' + CAST( Epic.GetWarehouseVersionName(@iSourceVersion + 4, 0) AS nvarchar(50)) + N'+.' 
+ N' The current target version is ' + CAST( Epic.GetWarehouseVersionName( @iTargetVersion, @iTargetMinorVersion ) AS nvarchar(50) ) + N'.';
  THROW 50001, @sVersionErrorMessage, 0;
END

--Check that the database being used is staging database
IF DB_NAME() = dbo.GetReportingDatabaseName()
BEGIN
  ;THROW 50001, 'Script cannot be run on the reporting database. Please run on the staging database.', 0; 
END

-- Make sure that all non-recurring jobs that need to be processed are completed
DECLARE @JobExistCheck bit

EXECUTE Epic.CheckJobExistence @i_IgnoreRecurringJobs = 1, @o_Exist = @JobExistCheck OUTPUT
IF @JobExistCheck = 1
BEGIN;
  THROW 50001, N'There are background jobs waiting to be processed. All non-recurring jobs must be processed before executing this script.', 0;
END

-- Make sure this script is not introducing validation issues into environments that do now allow it
DECLARE @sAllowGeneratedScriptsWithErrors bit = Epic.DoesEnvironmentAllowGeneratedScriptsWithErrors();

IF @sAllowGeneratedScriptsWithErrors = 0
BEGIN
  THROW 50001, N'This script could introduce validation issues.  In order to install on this database the source environment must not have any validation issues present when the script is generated.  If you feel you should be able to move this script, contact your Epic representative and mention SLG 5247006', 0;
END;

-- Make sure no lookups are broken
DECLARE @sBrokenLookups nvarchar(MAX)
EXECUTE Epic.StringAgg
  @i_sSql = N'SELECT <<Lookups.TableEtlName + N''.'' + Lookups.KeyColumnName>>
                FROM Config.Lookups Lookups
                  INNER JOIN Config.TableEtls TableEtls
                    ON Lookups.TableEtlName = TableEtls.TableEtlName
                  INNER JOIN Config.WarehouseTables WarehouseTables
                    ON Lookups.LookupTableName = WarehouseTables.TableName
                WHERE WarehouseTables.TableEtlName = N''SXu_EmployeeRoleDimX''
                  AND ( Lookups.LookupType IN ( N''DurableId'', N''SourceDataDurableId'' )
                    OR ( Lookups.LookupType IN ( N''Id'', N''SourceDataId'' ) AND COALESCE( Lookups.DateColumnName, N'''' ) <> N'''' ) ) 
                ORDER BY Lookups.TableEtlName, Lookups.KeyColumnName',
  @o_sDelimitedString = @sBrokenLookups OUTPUT
IF COALESCE( @sBrokenLookups, N'' ) <> N''
BEGIN
  SET @sBrokenLookups = N'Unable to set the component to no change tracking (Type 1) because this would break the following lookup columns to SXu_EmployeeRoleDimX: ' + @sBrokenLookups;
  THROW 50001, @sBrokenLookups, 0;
END

-- Check if historical rows will need to be deleted
DECLARE @RemoveHistoricalRows bit
SET @RemoveHistoricalRows = CASE WHEN EXISTS ( SELECT 1
                                                 FROM Config.TableEtlColumns
                                                 WHERE TableEtlName = N'SXu_EmployeeRoleDimX'
                                                     AND Type2 = 1 ) THEN 1
                                 ELSE 0 END

-- Make sure storing id mappings can be changed safely
DECLARE @WillBeProcessingIdMappings bit = 0
DECLARE @IsProcessingIdMappings bit = Epic.GetTableInfo( N'SXu_EmployeeRoleDimX', N'ProcessIdMappings' )
DECLARE @sPendingIdMappingTableName nvarchar(200) = Epic.GetTableInfo( N'SXu_EmployeeRoleDimX', N'PendingIdMappings' )
DECLARE @PendingTableHasRows bit

-- Cannot change if merges have not been processed yet
IF @WillBeProcessingIdMappings <> @IsProcessingIdMappings
   AND EXISTS( SELECT 1
                 FROM Epic.MergeQueue MergeQueue
                 WHERE MergeQueue.TableName = N'SXu_EmployeeRoleDimX'
                   AND ( MergeQueue.Success IS NULL OR MergeQueue.Success = 0 ) )
BEGIN
  ;THROW 50001, N'Cannot start or stop storing ID mappings until all merges for SXu_EmployeeRoleDimX have been resolved', 0;
END

-- Cannot disable if there are open record matches for the source data table
IF @WillBeProcessingIdMappings = 0
   AND @IsProcessingIdMappings = 1
   AND EXISTS( SELECT 1
                 FROM Epic.WorkQueue WorkQueue
                 WHERE WorkQueue.TableName = N'SXu_EmployeeRoleDimXSourceData'
                   AND WorkQueue.Type = N'RecordMatch' 
                   AND WorkQueue.Status IN ( N'Open', N'Deferred' ) )
BEGIN
  ;THROW 50001, N'Cannot stop storing ID mappings until all record match work queue items for SXu_EmployeeRoleDimXSourceData have been resolved', 0;
END

-- Cannot disable if there are pending ID mappings
IF @WillBeProcessingIdMappings = 0
   AND @IsProcessingIdMappings = 1
BEGIN
  EXECUTE Epic.HasRows @i_sTableNameWithSchema = @sPendingIdMappingTableName,
                       @HasRows = @PendingTableHasRows OUTPUT,
                       @i_TableInReporting = 1
  IF @PendingTableHasRows = 1
  BEGIN
    ;THROW 50001, N'Cannot stop storing ID mappings until all pending ID mappings have been resolved', 0;
  END
END

-- Make sure source data can be safely disabled
DECLARE @StoringSourceData bit = 0

IF @StoringSourceData = 0
   AND EXISTS( SELECT 1
                 FROM Config.Lookups
                 WHERE Lookups.LookupTableName = N'SXu_EmployeeRoleDimXSourceData'
                   AND Lookups.LookupType IN ( N'SourceDataId', N'SourceDataDurableId' ) )
BEGIN
  ;THROW 50001, N'Cannot stop storing source data in SXu_EmployeeRoleDimX while source data lookups to it exist', 0;
END

IF @StoringSourceData = 0
   AND 0 = 1
BEGIN
  ;THROW 50001, N'Cannot stop storing source data in SXu_EmployeeRoleDimX while SXu_EmployeeRoleDimX is forcing source data lookups', 0;
END

IF @StoringSourceData = 0
   AND 0 = 1
BEGIN
  ;THROW 50001, N'Cannot stop storing source data in SXu_EmployeeRoleDimX while SXu_EmployeeRoleDimX has store ID mappings enabled', 0;
END

-- Make sure that there are no failed ETL tasks for the DMC
IF EXISTS( SELECT 1 
             FROM Epic.FailedEtlTasks
               WHERE EtlName = N'SXu_EmployeeRoleDimX'
               AND [Fixed] = 0
           UNION ALL
           SELECT 1
             FROM Epic.EtlPerformanceInfoLog
             WHERE [Level] IN (N'Task', N'Detail')
               AND EtlName = N'SXu_EmployeeRoleDimX'
               AND EndTime IS NULL )
BEGIN;
  THROW 50001, N'SXu_EmployeeRoleDimX can''t be deployed because it has a failed ETL task and/or is currently running', 0;
END

-- Make sure that the package sources exist
IF Epic.GetIdForSourceName( N'SXu ErsatzHR' ) IS NULL
BEGIN;
  THROW 50001, N'Package source SXu ErsatzHR doesn''t exist in the target environment', 0;
END

--check for duplicate display names
DECLARE @i_tPackageNamesAndEpicVersions Console.PackageNamesAndEpicVersions
INSERT INTO @i_tPackageNamesAndEpicVersions VALUES 
( N'SXu_ErsatzHR_EmployeeRole_Load_X', N'ErsatzHR_EmployeeRole_Load', NULL, NULL )
,( N'SXu_ErsatzHR_EmployeeRole_Parse_X', N'ErsatzHR_EmployeeRole_Parse', NULL, NULL )
EXECUTE Console.CheckDisplayNameOverlapPackageLevel N'SXu_EmployeeRoleDimX', @i_tPackageNamesAndEpicVersions

-- Make sure that the selected packages do not exist in other DMCs
DECLARE @sDmcNameInUse nvarchar(300),
        @sPackageNameInUse nvarchar(300),
        @sPackageErrorMessage nvarchar(MAX)

SET @sPackageErrorMessage = ISNULL( @sPackageErrorMessage, '' ) 
SELECT @sPackageErrorMessage += N'Package ' + Packages.PackageName + N' is in use in DMC ' + Packages.TableEtlName + N'. '
  FROM Config.Packages Packages
  WHERE Packages.TableEtlName <> N'SXu_EmployeeRoleDimX'
    AND Packages.PackageName IN (N'SXu_ErsatzHR_EmployeeRole_Load_X',N'SXu_ErsatzHR_EmployeeRole_Parse_X')
IF @sPackageErrorMessage <> N''
BEGIN;
  THROW 50001, @sPackageErrorMessage, 0;
END

-- Make sure that you can acquire system level lock
DECLARE @SuccessCheck bit,
        @sErrorCheck nvarchar(MAX),
        @sLockedByCheck nvarchar(200)

EXECUTE Epic.LockEtl N'System', 1, @i_sLockedBy = N'Console Generated Script', @i_nLoopDelaySeconds = 1, @i_nTimeoutSeconds = 0, 
  @o_IsSuccess = @SuccessCheck OUTPUT, @o_sCurrentlyLockedBy = @sLockedByCheck OUTPUT, @i_IsExecution = 0 
IF @SuccessCheck = 0
BEGIN
  SET @sErrorCheck = CASE WHEN NULLIF(@sLockedByCheck, N'') IS NULL THEN N'Background process' ELSE @sLockedByCheck END
    + N' is currently locking system. Try again later.';
  THROW 50001, @sErrorCheck, 1;
END

SET NOCOUNT ON

DECLARE @sDmcName nvarchar(50),
        @EpicReleased bit,
        @HasDeveloperAccess bit,
        @ScriptType nvarchar(50),
        @sPackageNames nvarchar(max)

SET @sDmcName = N'SXu_EmployeeRoleDimX'
SET @EpicReleased = 0
SET @HasDeveloperAccess = 1
SET @ScriptType = N'Dmc&Package'
SET @sPackageNames = N'SXu_ErsatzHR_EmployeeRole_Load_X,SXu_ErsatzHR_EmployeeRole_Parse_X'

BEGIN TRY

  EXECUTE Console.PreDmcScript @sDmcName, @EpicReleased, @HasDeveloperAccess, @ScriptType

  EXECUTE Console.PreInsertIntoEtlDependencies @sDmcName, @EpicReleased, @ScriptType, @sPackageNames

  -- Insert into EtlDependencies
  --    No data   

  EXECUTE Console.PostInsertIntoEtlDependencies @sDmcName, @EpicReleased

  EXECUTE Console.PreInsertIntoLookups @sDmcName, @EpicReleased

  -- Insert into Lookups
  --    No data   

  -- Insert into DmcMatching
  --    No data   

  -- Insert into MatchingRules
  --    No data   

  -- Insert into MatchingRuleColumns
  --    No data   

  -- Insert into MatchingRuleColumnExcludedValues
  --    No data   

  EXECUTE Console.PreInsertIntoPackages @i_sDmcName = @sDmcName, @i_EpicReleased = @EpicReleased, @i_sPackageNames = @sPackageNames

  -- Insert into Packages
  EXECUTE Console.InsertIntoPackages
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sDisplayName = N'ErsatzHR_EmployeeRole_Load',
    @i_sGroupName = N'ErsatzHR',
    @i_sProcedureName = N'dbo.SXu_Ersatz_EmployeeRoleDim_Load_X',
    @i_sExtractMethod = N'Procedure',
    @i_sDestinationType = N'Reporting',
    @i_sAction = N'Load',
    @i_SingleUse = 0,
    @i_ExcludeFromNightly = 0,
    @i_ExcludeFromNightlyReleased = 0,
    @i_ExcludeFromNightlyOverride = NULL,
    @i_iProcessIndex = NULL,
    @i_sDescription = N'',
    @i_sClarityFullExtractQuery = N'',
    @i_sClarityOracleFullExtractQuery = N'',
    @i_sClarityIncrementalExtractQuery = N'',
    @i_sClarityOracleIncrementalExtractQuery = N'',
    @i_sClarityBackfillDeleteExtractQuery = N'',
    @i_sClarityOracleBackfillDeleteExtractQuery = N'',
    @i_iFirstEpicVersionId = 97,
    @i_iLastEpicVersionId = 32767,
    @i_sClarityBackfillThreshold = N'',
    @i_sClarityIncrementalThreshold = N'',
    @i_sRandomSampleSize = N'',
    @i_sRandomSampleThreshold = N'',
    @i_EpicReleased = 0,
    @i_EtlLeadOwned = 0,
    @i_sLineageProcedureName = N'',
    @i_NeedsClarityValidation = 0,
    @i_ExecuteIn32BitMode = NULL,
    @i_sCatalogLocation = N'',
    @i_IsTargetingPackageSpecificImportTable = 0,
    @i_SupportsMultipleClarityVersions = 0,
    @i_ClarityFullExtractQueryBatchMode = 0,
    @i_ClarityIncrementalExtractQueryBatchMode = 0,
    @i_IgnoreStringIdTypesDuringLoad = 0,
    @i_PerformsReverseBusinessKeyLookups = 0,
    @i_RecoverOnFailure = 1,
    @i_sClarityUniqueTableOverrideCode = N'',
    @i_sClarityOracleUniqueTableOverrideCode = N''

  EXECUTE Console.InsertIntoPackages
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sDisplayName = N'ErsatzHR_EmployeeRole_Parse',
    @i_sGroupName = N'ErsatzHR',
    @i_sProcedureName = N'',
    @i_sExtractMethod = N'SSIS',
    @i_sDestinationType = N'Reporting',
    @i_sAction = N'Load',
    @i_SingleUse = 0,
    @i_ExcludeFromNightly = 0,
    @i_ExcludeFromNightlyReleased = 0,
    @i_ExcludeFromNightlyOverride = NULL,
    @i_iProcessIndex = 0,
    @i_sDescription = N'',
    @i_sClarityFullExtractQuery = N'',
    @i_sClarityOracleFullExtractQuery = N'',
    @i_sClarityIncrementalExtractQuery = N'',
    @i_sClarityOracleIncrementalExtractQuery = N'',
    @i_sClarityBackfillDeleteExtractQuery = N'',
    @i_sClarityOracleBackfillDeleteExtractQuery = N'',
    @i_iFirstEpicVersionId = 97,
    @i_iLastEpicVersionId = 32767,
    @i_sClarityBackfillThreshold = N'',
    @i_sClarityIncrementalThreshold = N'',
    @i_sRandomSampleSize = N'',
    @i_sRandomSampleThreshold = N'',
    @i_EpicReleased = 0,
    @i_EtlLeadOwned = 0,
    @i_sLineageProcedureName = N'',
    @i_NeedsClarityValidation = 0,
    @i_ExecuteIn32BitMode = 0,
    @i_sCatalogLocation = N'',
    @i_IsTargetingPackageSpecificImportTable = 0,
    @i_SupportsMultipleClarityVersions = 0,
    @i_ClarityFullExtractQueryBatchMode = 0,
    @i_ClarityIncrementalExtractQueryBatchMode = 0,
    @i_IgnoreStringIdTypesDuringLoad = 0,
    @i_PerformsReverseBusinessKeyLookups = 0,
    @i_RecoverOnFailure = 1,
    @i_sClarityUniqueTableOverrideCode = N'',
    @i_sClarityOracleUniqueTableOverrideCode = N''

  EXECUTE Console.PreInsertIntoPackageSources @i_EpicReleased = @EpicReleased

  -- Insert into PackageSources
  EXECUTE Console.InsertIntoPackageSources
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_iSourceId = 10001,
    @i_sSourceName = N'SXu ErsatzHR',
    @i_sIdTypeOverride = N'',
    @i_RepeatBackfill = 0,
    @i_RunIncremental = 0

  EXECUTE Console.InsertIntoPackageSources
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_iSourceId = 10001,
    @i_sSourceName = N'SXu ErsatzHR',
    @i_sIdTypeOverride = N'',
    @i_RepeatBackfill = 0,
    @i_RunIncremental = 0

  EXECUTE Console.PostInsertIntoPackageSources @sDmcName

  -- Insert into PackageBaseIdColumns
  --    No data   

  EXECUTE Console.PreInsertIntoPackageCategoryTables @i_EpicReleased = @EpicReleased

  -- Insert into PackageCategoryTables
  --    No data   

  EXECUTE Console.PreInsertIntoPackageClaritySourceColumns @i_EpicReleased = @EpicReleased

  -- Insert into PackageClaritySourceColumns
  --    No data   

  EXECUTE Console.PreInsertIntoPackageClarityTables @i_EpicReleased = @EpicReleased

  -- Insert into PackageClarityTables
  --    No data   

  EXECUTE Console.PostInsertIntoPackageClarityTables

  EXECUTE Console.PreInsertIntoPackageColumns @EpicReleased

  -- Insert into PackageColumns
  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sColumnName = N'_IsIncremental',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'bit',
    @i_iStringLength = NULL,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sColumnName = N'_LoadId',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'tinyint',
    @i_iStringLength = NULL,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sColumnName = N'_PackageId',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'smallint',
    @i_iStringLength = NULL,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sColumnName = N'_SourceId',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'int',
    @i_iStringLength = NULL,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sColumnName = N'Description',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'nvarchar',
    @i_iStringLength = 300,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sColumnName = N'Id',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'nvarchar',
    @i_iStringLength = 50,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sColumnName = N'IdType',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'nvarchar',
    @i_iStringLength = 50,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sColumnName = N'IdTypeId',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'smallint',
    @i_iStringLength = NULL,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sColumnName = N'Name',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'nvarchar',
    @i_iStringLength = 50,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sColumnName = N'NumericBaseId',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'numeric',
    @i_iStringLength = NULL,
    @i_iNumericPrecision = 18,
    @i_iNumericScale = 0,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sColumnName = N'RoleClass',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'nvarchar',
    @i_iStringLength = 100,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sColumnName = N'StringBaseId',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'nvarchar',
    @i_iStringLength = 50,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sColumnName = N'_IsIncremental',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'bit',
    @i_iStringLength = NULL,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sColumnName = N'_LoadId',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'tinyint',
    @i_iStringLength = NULL,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sColumnName = N'_PackageId',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'smallint',
    @i_iStringLength = NULL,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sColumnName = N'_SourceId',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'int',
    @i_iStringLength = NULL,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sColumnName = N'Description',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'nvarchar',
    @i_iStringLength = 300,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sColumnName = N'Id',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'nvarchar',
    @i_iStringLength = 50,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sColumnName = N'IdType',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'nvarchar',
    @i_iStringLength = 50,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sColumnName = N'IdTypeId',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'smallint',
    @i_iStringLength = NULL,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sColumnName = N'Name',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'nvarchar',
    @i_iStringLength = 50,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sColumnName = N'NumericBaseId',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'numeric',
    @i_iStringLength = NULL,
    @i_iNumericPrecision = 18,
    @i_iNumericScale = 0,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sColumnName = N'RoleClass',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'nvarchar',
    @i_iStringLength = 100,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.InsertIntoPackageColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sColumnName = N'StringBaseId',
    @i_sDescription = NULL,
    @i_sExpression = NULL,
    @i_IgnoreError = 1,
    @i_sDataType = N'nvarchar',
    @i_iStringLength = 50,
    @i_iNumericPrecision = NULL,
    @i_iNumericScale = NULL,
    @i_IsDelete = 0,
    @i_IsValid = 1,
    @i_EpicReleased = 0,
    @i_sClarityTimeZone = NULL,
    @i_sTimeZoneOverride = NULL

  EXECUTE Console.PreInsertIntoPackageAllowedForeignKeyIdTypes

  -- Insert into PackageAllowedForeignKeyIdTypes
  --    No data   

  EXECUTE Console.PostInsertIntoPackageAllowedForeignKeyIdTypes @sDmcName

  EXECUTE Console.PreInsertIntoPackageDataDependencies @i_EpicReleased = @EpicReleased

  -- Insert into PackageDataDependencies
  --    No data   

  EXECUTE Console.PreInsertIntoPackageDataSources @i_EpicReleased = @EpicReleased

  -- Insert into PackageDataSources
  --    No data   

  EXECUTE Console.PreInsertIntoPackageIdTypes @i_EpicReleased = @EpicReleased

  -- Insert into PackageIdTypes
  EXECUTE Console.InsertIntoPackageIdTypes
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Load_X',
    @i_sIdType = N'ErsatzEmployeeRoleId',
    @i_sDescription = N''

  EXECUTE Console.InsertIntoPackageIdTypes
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sPackageName = N'SXu_ErsatzHR_EmployeeRole_Parse_X',
    @i_sIdType = N'ErsatzEmployeeRoleId',
    @i_sDescription = N''

  EXECUTE Console.PostInsertIntoPackageIdTypes @sDmcName

  EXECUTE Console.PreInsertIntoPackageVariables @i_EpicReleased = @EpicReleased

  -- Insert into PackageVariables
  --    No data   

  EXECUTE Console.PostInsertIntoPackageVariables

  EXECUTE Console.PreInsertIntoPackageQueryExtensions

  -- Insert into PackageQueryExtensions
  --    No data   

  EXECUTE Console.PreInsertIntoProcedureEtls @sDmcName, @EpicReleased

  -- Insert into ProcedureEtls
  --    No data   

  EXECUTE Console.PostInsertIntoProcedureEtls

  EXECUTE Console.PreInsertIntoTableEtls @sDmcName, @EpicReleased

  -- Insert into TableEtls
  EXECUTE Console.InsertIntoTableEtls
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sDmcType = N'Dimension',
    @i_sEpicImportTableName = N'SXu_EmployeeRoleDimXImport',
    @i_sExistingBackfillIdsImportTableName = N'SXu_EmployeeRoleDimXExistingBackfillIdsImport',
    @i_sDeleteImportTableName = N'SXu_EmployeeRoleDimXDeleteImport',
    @i_sTransformProcedure = N'',
    @i_sProcessProcedure = N'',
    @i_sCleanupProcedure = N'',
    @i_sFixCleanupProcedure = N'',
    @i_Bridge = 0,
    @i_ClarityExtraction = 1,
    @i_CustomExtraction = 1,
    @i_Transform = 1,
    @i_Load = 1,
    @i_ProcessDeletes = 1,
    @i_ProcessIdMappings = 0,
    @i_AutomateIdRemapping = 0,
    @i_Hidden = 0,
    @i_sParent = NULL,
    @i_sGranularity = N'A row in this table represents a job role under which an employee can log time.',
    @i_sImportTableGranularity = N'A row in this table represents a job role under which an employee can log time.',
    @i_sImportTableDescription = N'',
    @i_EpicReleased = 0,
    @i_EtlLeadOwned = 0,
    @i_HasStandard = 0,
    @i_ExcludeFromNightly = 0,
    @i_ExcludeFromNightlyReleased = 0,
    @i_ExcludeFromNightlyOverride = NULL,
    @i_StoreSourceData = 0,
    @i_IsCci = 0,
    @i_RunCheckDeletesBeforeProcess = 0,
    @i_ForceSourceDataLookups = 0,
    @i_AllowConcurrentNonQueryPackages = 1,
    @i_AllowMultipleSourceRecords = 1,
    @i_IsTimespanTable = 0,
    @i_CleanupProcedureCompliesWithChangeTracking = 0

  EXECUTE Console.PreInsertIntoTableEtlColumns @sDmcName, @EpicReleased

  -- Insert into TableEtlColumns
  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'SXu_EmployeeRoleKey',
    @i_sBaseColumnName = N'SXu_EmployeeRoleKey',
    @i_sDataType = N'bigint',
    @i_AllowNull = 0,
    @i_sDefaultValue = NULL,
    @i_sDeleteValue = NULL,
    @i_Reporting = 1,
    @i_Import = 0,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 0,
    @i_SourceData = 0,
    @i_SurrogateKey = 1,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'Surrogate key used to uniquely identify the record',
    @i_sImportDescription = NULL,
    @i_iIndex = 0,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'IdTypeId',
    @i_sBaseColumnName = N'IdTypeId',
    @i_sDataType = N'smallint',
    @i_AllowNull = 1,
    @i_sDefaultValue = NULL,
    @i_sDeleteValue = NULL,
    @i_Reporting = 0,
    @i_Import = 1,
    @i_ExistingBackfillIdsImport = 1,
    @i_DeleteImport = 1,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 1,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'Source IdType ID for the record',
    @i_sImportDescription = N'Source IdType ID for the record',
    @i_iIndex = 10,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'IdType',
    @i_sBaseColumnName = N'IdType',
    @i_sDataType = N'nvarchar(50)',
    @i_AllowNull = 1,
    @i_sDefaultValue = NULL,
    @i_sDeleteValue = NULL,
    @i_Reporting = 0,
    @i_Import = 1,
    @i_ExistingBackfillIdsImport = 1,
    @i_DeleteImport = 1,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 1,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'Source ID type for the record',
    @i_sImportDescription = N'Source ID type for the record',
    @i_iIndex = 20,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'Id',
    @i_sBaseColumnName = N'Id',
    @i_sDataType = N'nvarchar(50)',
    @i_AllowNull = 1,
    @i_sDefaultValue = NULL,
    @i_sDeleteValue = NULL,
    @i_Reporting = 0,
    @i_Import = 1,
    @i_ExistingBackfillIdsImport = 1,
    @i_DeleteImport = 1,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 1,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'Source ID for the record',
    @i_sImportDescription = N'Source ID for the record',
    @i_iIndex = 30,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'NumericBaseId',
    @i_sBaseColumnName = N'NumericBaseId',
    @i_sDataType = N'numeric(18,0)',
    @i_AllowNull = 1,
    @i_sDefaultValue = NULL,
    @i_sDeleteValue = NULL,
    @i_Reporting = 0,
    @i_Import = 1,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 1,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'Primary base ID of the record. For Clarity query-based load packages, one of the base ID columns must be populated, and the unpopulated base ID column can be left NULL. If no base ID column is populated, Clarity query-based delete packages will not mark records as deleted.',
    @i_sImportDescription = N'Primary base ID of the record. For Clarity query-based load packages, one of the base ID columns must be populated, and the unpopulated base ID column can be left NULL. If no base ID column is populated, Clarity query-based delete packages will not mark records as deleted.',
    @i_iIndex = 40,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'StringBaseId',
    @i_sBaseColumnName = N'StringBaseId',
    @i_sDataType = N'nvarchar(50)',
    @i_AllowNull = 1,
    @i_sDefaultValue = NULL,
    @i_sDeleteValue = NULL,
    @i_Reporting = 0,
    @i_Import = 1,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 1,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'Primary base ID of the record. For Clarity query-based load packages, one of the base ID columns must be populated, and the unpopulated base ID column can be left NULL. If no base ID column is populated, Clarity query-based delete packages will not mark records as deleted.',
    @i_sImportDescription = N'Primary base ID of the record. For Clarity query-based load packages, one of the base ID columns must be populated, and the unpopulated base ID column can be left NULL. If no base ID column is populated, Clarity query-based delete packages will not mark records as deleted.',
    @i_iIndex = 50,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'_CreationInstant',
    @i_sBaseColumnName = N'_CreationInstant',
    @i_sDataType = N'datetime',
    @i_AllowNull = 1,
    @i_sDefaultValue = NULL,
    @i_sDeleteValue = NULL,
    @i_Reporting = 1,
    @i_Import = 0,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 0,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'The date and time the record was created',
    @i_sImportDescription = NULL,
    @i_iIndex = 60,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 1,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'_LastUpdatedInstant',
    @i_sBaseColumnName = N'_LastUpdatedInstant',
    @i_sDataType = N'datetime',
    @i_AllowNull = 1,
    @i_sDefaultValue = NULL,
    @i_sDeleteValue = NULL,
    @i_Reporting = 1,
    @i_Import = 0,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 0,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'The date and time the record was last updated',
    @i_sImportDescription = NULL,
    @i_iIndex = 70,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 1,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'_IsInferred',
    @i_sBaseColumnName = N'_IsInferred',
    @i_sDataType = N'tinyint',
    @i_AllowNull = 1,
    @i_sDefaultValue = N'0',
    @i_sDeleteValue = NULL,
    @i_Reporting = 1,
    @i_Import = 0,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 0,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'1/0 column that indicates whether the record is inferred',
    @i_sImportDescription = NULL,
    @i_iIndex = 80,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 1,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'_IsDeleted',
    @i_sBaseColumnName = N'_IsDeleted',
    @i_sDataType = N'tinyint',
    @i_AllowNull = 1,
    @i_sDefaultValue = N'0',
    @i_sDeleteValue = NULL,
    @i_Reporting = 1,
    @i_Import = 0,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 0,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'1/0 column that indicates whether the record is deleted',
    @i_sImportDescription = NULL,
    @i_iIndex = 90,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 1,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'_PrimaryPackageToImpactRecord',
    @i_sBaseColumnName = N'_PrimaryPackageToImpactRecord',
    @i_sDataType = N'nvarchar(50)',
    @i_AllowNull = 0,
    @i_sDefaultValue = N'*Unknown',
    @i_sDeleteValue = N'',
    @i_Reporting = 1,
    @i_Import = 0,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 0,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'The name of the primary package to impact the record',
    @i_sImportDescription = NULL,
    @i_iIndex = 100,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 1,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'_MostRecentPackageToImpactRecord',
    @i_sBaseColumnName = N'_MostRecentPackageToImpactRecord',
    @i_sDataType = N'nvarchar(50)',
    @i_AllowNull = 0,
    @i_sDefaultValue = N'*Unknown',
    @i_sDeleteValue = N'',
    @i_Reporting = 1,
    @i_Import = 0,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 0,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'The name of the most recent package to impact the record',
    @i_sImportDescription = NULL,
    @i_iIndex = 110,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 1,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'_NumberOfSources',
    @i_sBaseColumnName = N'_NumberOfSources',
    @i_sDataType = N'smallint',
    @i_AllowNull = 0,
    @i_sDefaultValue = N'0',
    @i_sDeleteValue = NULL,
    @i_Reporting = 1,
    @i_Import = 0,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 0,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'The number of sources contributing to the record',
    @i_sImportDescription = NULL,
    @i_iIndex = 120,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 1,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'_PackageId',
    @i_sBaseColumnName = N'_PackageId',
    @i_sDataType = N'smallint',
    @i_AllowNull = 1,
    @i_sDefaultValue = NULL,
    @i_sDeleteValue = NULL,
    @i_Reporting = 0,
    @i_Import = 1,
    @i_ExistingBackfillIdsImport = 1,
    @i_DeleteImport = 1,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'ID of the package that loaded this record. For query-based packages and stored procedure packages targeting the package specific import table, this column is auto-populated. Stored procedure packages targeting the main import table should be converted to load the package specific import table, not populate this column. For custom SSIS packages, use the stored procedure "dbo.GetSsisPackageImportMetadata" on the staging database to calculate what to populate, keeping in mind that the ID is environment-specific.',
    @i_sImportDescription = N'ID of the package that loaded this record. For query-based packages and stored procedure packages targeting the package specific import table, this column is auto-populated. Stored procedure packages targeting the main import table should be converted to load the package specific import table, not populate this column. For custom SSIS packages, use the stored procedure "dbo.GetSsisPackageImportMetadata" on the staging database to calculate what to populate, keeping in mind that the ID is environment-specific.',
    @i_iIndex = 130,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'_SourceId',
    @i_sBaseColumnName = N'_SourceId',
    @i_sDataType = N'int',
    @i_AllowNull = 1,
    @i_sDefaultValue = NULL,
    @i_sDeleteValue = NULL,
    @i_Reporting = 0,
    @i_Import = 1,
    @i_ExistingBackfillIdsImport = 1,
    @i_DeleteImport = 1,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'ID of the source that loaded this record. For query-based packages and stored procedure packages targeting the package specific import table, this column is auto-populated. Stored procedure packages targeting the main import table should be converted to load the package specific import table, not populate this column. For custom SSIS packages, use the stored procedure "dbo.GetSsisPackageImportMetadata" on the staging database to calculate what to populate, keeping in mind that the ID is environment-specific.',
    @i_sImportDescription = N'ID of the source that loaded this record. For query-based packages and stored procedure packages targeting the package specific import table, this column is auto-populated. Stored procedure packages targeting the main import table should be converted to load the package specific import table, not populate this column. For custom SSIS packages, use the stored procedure "dbo.GetSsisPackageImportMetadata" on the staging database to calculate what to populate, keeping in mind that the ID is environment-specific.',
    @i_iIndex = 140,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'_IsIncremental',
    @i_sBaseColumnName = N'_IsIncremental',
    @i_sDataType = N'bit',
    @i_AllowNull = 1,
    @i_sDefaultValue = NULL,
    @i_sDeleteValue = NULL,
    @i_Reporting = 0,
    @i_Import = 1,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 0,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'Whether this row came from the incremental or backfill version of the package. For query-based packages, this column is auto-populated. For stored procedure and custom SSIS packages, it can remain NULL.',
    @i_sImportDescription = N'Whether this row came from the incremental or backfill version of the package. For query-based packages, this column is auto-populated. For stored procedure and custom SSIS packages, it can remain NULL.',
    @i_iIndex = 150,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'_LoadId',
    @i_sBaseColumnName = N'_LoadId',
    @i_sDataType = N'tinyint',
    @i_AllowNull = 1,
    @i_sDefaultValue = NULL,
    @i_sDeleteValue = NULL,
    @i_Reporting = 0,
    @i_Import = 1,
    @i_ExistingBackfillIdsImport = 1,
    @i_DeleteImport = 1,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 0,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'ID of the load attempt the row is associated with. For query-based packages and stored procedure packages targeting the package specific import table, this column is auto-populated. Stored procedure packages targeting the main import table should be converted to load the package specific import table, not populate this column. For custom SSIS packages, use the stored procedure "dbo.GetSsisPackageImportMetadata" on the staging database to calculate what to populate.',
    @i_sImportDescription = N'ID of the load attempt the row is associated with. For query-based packages and stored procedure packages targeting the package specific import table, this column is auto-populated. Stored procedure packages targeting the main import table should be converted to load the package specific import table, not populate this column. For custom SSIS packages, use the stored procedure "dbo.GetSsisPackageImportMetadata" on the staging database to calculate what to populate.',
    @i_iIndex = 160,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'Name',
    @i_sBaseColumnName = N'Name',
    @i_sDataType = N'nvarchar(50)',
    @i_AllowNull = 0,
    @i_sDefaultValue = N'*Unknown',
    @i_sDeleteValue = N'*Deleted',
    @i_Reporting = 1,
    @i_Import = 1,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 0,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 1,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'Name of the employee role',
    @i_sImportDescription = N'Name of the employee role',
    @i_iIndex = 170,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'Description',
    @i_sBaseColumnName = N'Description',
    @i_sDataType = N'nvarchar(300)',
    @i_AllowNull = 0,
    @i_sDefaultValue = N'*Unknown',
    @i_sDeleteValue = N'*Deleted',
    @i_Reporting = 1,
    @i_Import = 1,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 0,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 1,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'Description of the employee role.',
    @i_sImportDescription = N'Description of the employee role.',
    @i_iIndex = 180,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.InsertIntoTableEtlColumns
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sColumnName = N'RoleClass',
    @i_sBaseColumnName = N'RoleClass',
    @i_sDataType = N'nvarchar(100)',
    @i_AllowNull = 0,
    @i_sDefaultValue = N'*Unknown',
    @i_sDeleteValue = N'*Deleted',
    @i_Reporting = 1,
    @i_Import = 1,
    @i_ExistingBackfillIdsImport = 0,
    @i_DeleteImport = 0,
    @i_SourceData = 0,
    @i_SurrogateKey = 0,
    @i_IdType = 0,
    @i_Id = 0,
    @i_IdTypeId = 0,
    @i_Type1 = 1,
    @i_Type2 = 0,
    @i_DurableKey = 0,
    @i_StartDate = 0,
    @i_EndDate = 0,
    @i_IsCurrent = 0,
    @i_Junk = 0,
    @i_PostEtlType1 = 0,
    @i_PostEtlType2 = 0,
    @i_SourceDataType1 = 0,
    @i_SourceDataType2 = 0,
    @i_sDescription = N'Class of the employee role ?e.g. Patient Care, Administration?',
    @i_sImportDescription = N'Class of the employee role ?e.g. Patient Care, Administration?',
    @i_iIndex = 190,
    @i_HasStandard = 0,
    @i_iColumnStandardId = NULL,
    @i_EpicReleased = 0,
    @i_ExclFromThirdPartyViews = 1,
    @i_IsSourceColumn = 0,
    @i_IsStatusColumn = 0,
    @i_IsBridgeComboColumn = 0,
    @i_IsPartitioningColumn = 0

  EXECUTE Console.PostInsertIntoTableEtlColumns @sDmcName

  EXECUTE Console.PreInsertIntoDmcPartitionInfo @sDmcName

  -- Insert into DmcPartitionInfo
  --    No data   

  EXECUTE Console.PostInsertIntoDmcPartitionInfo @sDmcName

  EXECUTE Console.PreInsertIntoTableEtlIndexes @sDmcName, @EpicReleased

  -- Insert into TableEtlIndexes
  EXECUTE Console.InsertIntoTableEtlIndexes
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sIndexName = N'PrimaryKey',
    @i_Clustered = 1,
    @i_Unique = 1,
    @i_Primary = 1,
    @i_FullText = 0,
    @i_sColumnNames = N'SXu_EmployeeRoleKey',
    @i_sIncludeColumnNames = N'',
    @i_sFilterClause = N'',
    @i_EpicReleased = 1,
    @i_sFullTextCatalog = N'',
    @i_sFullTextIncludeColumnLanguages = N'',
    @i_UseLocaleDefaultFullTextLanguage = 0

  EXECUTE Console.PreInsertIntoWarehouseTables @sDmcName, @EpicReleased

  -- Insert into WarehouseTables
  EXECUTE Console.InsertIntoWarehouseTables
    @i_sTableEtlName = N'SXu_EmployeeRoleDimX',
    @i_sTableName = N'SXu_EmployeeRoleDimX',
    @i_sDescription = N'A row in this table represents a job role under which an employee can log time.',
    @i_sReportingTableType = N'Primary'

  EXECUTE Console.PostInsertIntoWarehouseTables @sDmcName, @EpicReleased

  EXECUTE Console.PreInsertIntoOrganizationFilter @sDmcName, @EpicReleased

  -- Insert into OrganizationFilter
  EXECUTE Console.InsertIntoOrganizationFilter
    @i_sDmcName = N'SXu_EmployeeRoleDimX',
    @i_sReleasedFilterType = N'Disabled',
    @i_xReleasedJoinPath = NULL,
    @i_sOverrideFilterType = NULL,
    @i_xOverrideJoinPath = NULL,
    @i_UseOverride = 0

  EXECUTE Console.PostInsertIntoOrganizationFilter @sDmcName, @EpicReleased

  EXECUTE Console.PreInsertIntoDmcDurationStartAndEndColumns @sDmcName, @EpicReleased

  -- Insert into DmcDurationStartAndEndColumns
  --    No data   

  EXECUTE Console.PreInsertIntoWinningBusinessKeySourceGroups @sDmcName, @EpicReleased

  -- Insert into WinningBusinessKeySourceGroups
  --    No data   

  EXECUTE Console.PreInsertIntoWinningBusinessKeySelectLogic @sDmcName, @EpicReleased

  -- Insert into WinningBusinessKeySelectLogic
  --    No data   

  EXECUTE Console.PostDmcScript @sDmcName, @EpicReleased, @HasDeveloperAccess, @ScriptType

  --************************************************************************
  -- PRE-CONVERSION
  -- This code will be executed before the script starts changing the reporting tables.
  -- Replace this comment with your code if needed.
  -- For example if you have renamed an existing column in the metadata, you may want to 
  -- add code to rename the column here otherwise the new column will be created and the
  -- old column will be renamed to column_old.
 
  -- EXECUTE <<insert Reporting Database>>..sp_rename 'dbo.SXu_EmployeeRoleDimX.<<insert OldColumnName>>', '<<insert NewColumnName>>', 'COLUMN'
  --************************************************************************

  EXECUTE Console.CreateTablesInNonDev @sDmcName, @RemoveHistoricalRows

  --************************************************************************
  -- POST-CONVERSION
  -- This code will be executed after the script has changed the reporting tables.
  -- Replace this comment with your code if needed.
  -- For example if you have a column where the data type is changed in the metadata,
  -- the install script will rename the existing column to column_old. You should consider resetting 
  -- the backfill id if needed, add the code to move the data from column_old to column, 
  -- and drop column_old in a background job.

  -- Below are simple examples of actions that may be performed via post-conversion:

  --  Example One: Reset package backfills
  --  EXECUTE Epic.ResetBackfillLastId N'SXu_EmployeeRoleDimX',
  --          N'<<insert PackageName>>' -- If package name is NULL, backfill id for all packages for SXu_EmployeeRoleDimX are updated

  --  Example Two: Change column data type
  --  EXECUTE Epic.InsertJob N'Deferred conversion: Populate column ''<<insert ColumnName>>'' in the table ''SXu_EmployeeRoleDimX'' ',
  --          N'<<insert logic to populate data and drop column_old>>',
  --          N'SXu_EmployeeRoleDimX', NULL, NULL,
  --          N'<<insert Priority from Config.JobPriorities.Label>>'
  --************************************************************************

  -- Release the system level lock
  EXECUTE Epic.LockEtl N'System', 0, @i_sLockedBy = N'Console Generated Script', @i_IsExecution = 0

END TRY
BEGIN CATCH
  -- Release the system level lock
  EXECUTE Epic.LockEtl N'System', 0, @i_sLockedBy = N'Console Generated Script', @i_IsExecution = 0

  -- Throw the error message if any 
  ; THROW;

END CATCH


